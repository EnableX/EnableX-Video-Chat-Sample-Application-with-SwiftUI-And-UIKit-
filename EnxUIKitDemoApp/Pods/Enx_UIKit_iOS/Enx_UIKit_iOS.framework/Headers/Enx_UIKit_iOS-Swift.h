#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 6.0.2 effective-5.10 (swiftlang-6.0.2.1.2 clang-1600.0.26.4)
#ifndef ENX_UIKIT_IOS_SWIFT_H
#define ENX_UIKIT_IOS_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wnon-modular-include-in-framework-module"
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#pragma clang diagnostic pop
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreFoundation;
@import CoreVideo;
@import EnxRTCiOS;
@import Foundation;
@import ObjectiveC;
@import UIKit;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"
#pragma clang diagnostic ignored "-Wunsafe-buffer-usage"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="Enx_UIKit_iOS",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)
typedef SWIFT_ENUM(NSInteger, EnxPageSlideEventName, open) {
  EnxPageSlideEventNameEnxChat = 1,
  EnxPageSlideEventNameEnxPolling = 2,
  EnxPageSlideEventNameEnxQnA = 3,
  EnxPageSlideEventNameEnxScreenShare = 4,
  EnxPageSlideEventNameEnxVideoSetting = 5,
  EnxPageSlideEventNameEnxCreatePoll = 6,
};

typedef SWIFT_ENUM(NSInteger, EnxRequiredEventsOption, open) {
  EnxRequiredEventsOptionAudio = 1,
  EnxRequiredEventsOptionVideo = 2,
  EnxRequiredEventsOptionCameraSwitch = 3,
  EnxRequiredEventsOptionAudioSwitch = 4,
  EnxRequiredEventsOptionGroupChat = 5,
  EnxRequiredEventsOptionDisconnect = 6,
  EnxRequiredEventsOptionRequestFloor = 7,
  EnxRequiredEventsOptionRequestList = 8,
  EnxRequiredEventsOptionMuteRoom = 9,
  EnxRequiredEventsOptionRecording = 10,
  EnxRequiredEventsOptionSwitchAT = 11,
  EnxRequiredEventsOptionAnnotation = 12,
  EnxRequiredEventsOptionPolling = 13,
  EnxRequiredEventsOptionQna = 14,
  EnxRequiredEventsOptionLobby = 15,
  EnxRequiredEventsOptionRoomSetting = 16,
  EnxRequiredEventsOptionScreenShare = 17,
  EnxRequiredEventsOptionLiveStreaming = 18,
};


SWIFT_CLASS("_TtC13Enx_UIKit_iOS28EnxRequiredEventsOptionModel")
@interface EnxRequiredEventsOptionModel : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL("_TtP13Enx_UIKit_iOS27EnxScreenShareStateDelegate_")
@protocol EnxScreenShareStateDelegate
- (void)broadCastWithConnected:(NSArray * _Nullable)date;
- (void)broadCastDisconnected;
- (void)failedToConnectWithBroadCast:(NSArray * _Nullable)reason;
- (void)disconnectedByOwner;
- (void)requestedToExitRoom:(NSArray * _Nullable)exitRoom;
@end


SWIFT_CLASS("_TtC13Enx_UIKit_iOS20EnxSendUserDataModel")
@interface EnxSendUserDataModel : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSString;
@class UIColor;

SWIFT_CLASS("_TtC13Enx_UIKit_iOS10EnxSetting")
@interface EnxSetting : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) EnxSetting * _Nonnull shared;)
+ (EnxSetting * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)setCameraPosition:(BOOL)isFontCamera;
- (void)startLiveStreamingAfterJoin:(BOOL)isStart;
- (void)liveStreamingWithInformation:(NSDictionary<NSString *, id> * _Nonnull)info;
- (void)setRTMPCustomWithUrlDetails:(NSString * _Nonnull)url;
- (void)stopStreaming;
- (void)startStreamingWithInformation:(NSDictionary<NSString *, id> * _Nullable)info;
- (void)isShowWithGoLiveIndicator:(BOOL)flag;
- (NSDictionary<NSString *, NSArray *> * _Nonnull)allChatData SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getRoomMode SWIFT_WARN_UNUSED_RESULT;
- (void)setJoinText:(NSString * _Nonnull)joinText;
- (void)updateBottomOptionViewWithColor:(UIColor * _Nonnull)withColor;
- (void)configureRequiredEventsOptionListWithList:(NSArray<EnxRequiredEventsOptionModel *> * _Nonnull)withList;
- (void)configureRequiredEventListWithList:(NSArray<NSNumber *> * _Nonnull)withList;
- (void)configureParticipantListTo:(NSArray<NSNumber *> * _Nonnull)list;
- (void)setOptionForScreenShare:(NSDictionary<NSString *, NSString *> * _Nonnull)opt;
- (NSDictionary<NSString *, NSString *> * _Nullable)getOptionForScreenShare SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getClientID SWIFT_WARN_UNUSED_RESULT;
- (BOOL)getiSKnockRoom SWIFT_WARN_UNUSED_RESULT;
- (BOOL)getisUserAwaited SWIFT_WARN_UNUSED_RESULT;
- (BOOL)getisUserInFloorReq SWIFT_WARN_UNUSED_RESULT;
- (BOOL)getisShareReq SWIFT_WARN_UNUSED_RESULT;
- (BOOL)getisCanvas SWIFT_WARN_UNUSED_RESULT;
- (void)setAppGroupsNameWithGroupname:(NSString * _Nonnull)groupname withUserKey:(NSString * _Nonnull)keyName;
- (NSArray<NSDictionary<NSString *, NSString *> *> * _Nonnull)getParticipantList SWIFT_WARN_UNUSED_RESULT;
- (void)sendUserData:(EnxSendUserDataModel * _Nonnull)userData;
- (void)configureRoomSettingOptTo:(NSArray<NSNumber *> * _Nonnull)list;
- (void)isPreScreening:(BOOL)flag;
- (void)isAudioOnlyCall:(BOOL)flag;
- (void)joinAsVideoMute:(BOOL)flag;
- (void)joinAsAudioMute:(BOOL)flag;
- (void)closeChatPage;
- (void)closeSessionSettingPage;
- (void)closePollingPage;
- (void)closeCreatePollingPage;
- (void)closeQNAPage;
@end


SWIFT_CLASS("_TtC13Enx_UIKit_iOS13EnxShareClass")
@interface EnxShareClass : NSObject
- (nonnull instancetype)initWithScreenShare:(NSString * _Nonnull)token withAppGroupName:(NSString * _Nonnull)groupName withUserKey:(NSString * _Nonnull)userKey delegate:(id <EnxScreenShareStateDelegate> _Nullable)delegate OBJC_DESIGNATED_INITIALIZER;
- (void)stopStreenShare;
- (void)processFrameWithBuffer:(CVPixelBufferRef _Nonnull)sampleBuffer withTimeStamp:(int64_t)timeStamp;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface EnxShareClass (SWIFT_EXTENSION(Enx_UIKit_iOS)) <EnxBroadCastDelegate>
- (void)failedToDisconnectWithBroadCast:(NSArray * _Nonnull)data;
- (void)broadCastConnected;
- (void)didStartBroadCast:(NSArray * _Nullable)data;
- (void)didStoppedBroadCast:(NSArray * _Nullable)data;
- (void)broadCastDisconnected;
- (void)failedToConnectWithBroadCast:(NSArray * _Nonnull)reason;
- (void)disconnectedByOwner;
- (void)didRequestedExitRoom:(NSArray * _Nullable)Data;
@end

@class EnxRoom;

SWIFT_PROTOCOL("_TtP13Enx_UIKit_iOS21EnxVideoStateDelegate_")
@protocol EnxVideoStateDelegate
- (void)disconnectWithResponse:(NSArray * _Nullable)response;
- (void)connectErrorWithReason:(NSArray * _Nullable)reason;
- (void)connectToRoom:(EnxRoom * _Nullable)enxRoom roomMetadata:(NSDictionary<NSString *, id> * _Nullable)roomMetadata;
@optional
- (void)didPageSlide:(enum EnxPageSlideEventName)pageName isShow:(BOOL)isShow;
- (void)didUserDataReceived:(NSDictionary<NSString *, id> * _Nonnull)userData;
@end

@class NSCoder;

SWIFT_CLASS("_TtC13Enx_UIKit_iOS17EnxVideoViewClass")
@interface EnxVideoViewClass : UIView
- (nonnull instancetype)initWithToken:(NSString * _Nonnull)token delegate:(id <EnxVideoStateDelegate> _Nullable)delegate embedUrl:(NSString * _Nullable)embedUrl OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)exitScreenShare;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end



@class UIGestureRecognizer;
@class UITouch;

@interface EnxVideoViewClass (SWIFT_EXTENSION(Enx_UIKit_iOS)) <UIGestureRecognizerDelegate>
- (BOOL)gestureRecognizer:(UIGestureRecognizer * _Nonnull)gestureRecognizer shouldReceiveTouch:(UITouch * _Nonnull)touch SWIFT_WARN_UNUSED_RESULT;
@end

@class EnxStream;

@interface EnxVideoViewClass (SWIFT_EXTENSION(Enx_UIKit_iOS)) <EnxTalkerStreamDelegate>
- (void)didSelectedStreamAtIndex:(EnxStream * _Nonnull)stream;
@end













@interface EnxVideoViewClass (SWIFT_EXTENSION(Enx_UIKit_iOS)) <EnxRoomDelegate, EnxStreamDelegate>
/// Room Connected
- (void)room:(EnxRoom * _Nullable)room didConnect:(NSDictionary<NSString *, id> * _Nullable)roomMetadata;
/// Room Connection failed with cause
- (void)room:(EnxRoom * _Nullable)room didError:(NSArray * _Nullable)reason;
/// Room Event has failed
- (void)room:(EnxRoom * _Nullable)room didEventError:(NSArray * _Nullable)reason;
/// Remote stream added , now user need to subscribe same stream
- (void)room:(EnxRoom * _Nullable)room didAddedStream:(EnxStream * _Nullable)stream;
/// self stream has published success
- (void)room:(EnxRoom * _Nullable)room didPublishStream:(EnxStream * _Nullable)stream;
/// All available remote stream has subscribe Success
- (void)room:(EnxRoom * _Nullable)room didSubscribeStream:(EnxStream * _Nullable)stream;
/// Any other user has join after me join
- (void)room:(EnxRoom * _Nullable)room userDidJoined:(NSArray * _Nullable)Data;
/// Any remote user got disconnected
- (void)room:(EnxRoom * _Nullable)room userDidDisconnected:(NSArray * _Nullable)Data;
- (void)room:(EnxRoom * _Nullable)room didActiveTalkerView:(UIView * _Nullable)view;
- (void)didAvailableWithActiveUser:(NSInteger)count;
/// Delegates for Moderator
- (void)didFloorRequestReceived:(NSArray * _Nullable)Data;
/// This delegate method will notify to all available modiatore, Once any participent has finished there floor request
- (void)didFinishedFloorRequest:(NSArray * _Nullable)Data;
/// This delegate method will notify to all available modiatore, Once any participent has cancled there floor request
- (void)didCancelledFloorRequest:(NSArray * _Nullable)Data;
/// This delegate invoke when Moderator accepts the floor request.
- (void)didGrantedFloorRequest:(NSArray * _Nullable)Data;
/// This delegate invoke when Moderator deny the floor request.
- (void)didDeniedFloorRequest:(NSArray * _Nullable)Data;
/// This delegate invoke when Moderator release the floor request.
- (void)didReleasedFloorRequest:(NSArray * _Nullable)Data;
/// Process floor request
- (void)didProcessFloorRequested:(NSArray * _Nullable)Data;
/// This Delegate will notify to user about Floor requeted response.
- (void)didFloorRequested:(NSArray * _Nullable)Data;
/// This ACK method for Participent , When he/she will finished their request floor
/// after request floor accepted by any modiatore
- (void)didFloorFinished:(NSArray * _Nullable)Data;
/// This ACK method for Participent , When he/she will cancle their request floor
- (void)didFloorCancelled:(NSArray * _Nullable)Data;
/// This Delegate will notify to current User If any user has stoped There Audio or current user Video
- (void)didAudioEvents:(NSDictionary<NSString *, id> * _Nullable)data;
- (void)didVideoEvents:(NSDictionary<NSString *, id> * _Nullable)data;
- (void)roomRecordOn:(NSArray * _Nullable)Data;
- (void)roomRecordOff:(NSArray * _Nullable)Data;
- (void)didNotifyDeviceUpdate:(NSString * _Nonnull)updates;
- (void)room:(EnxRoom * _Nonnull)room didMessageReceived:(NSArray * _Nullable)data;
- (void)room:(EnxRoom * _Nonnull)room didUserDataReceived:(NSArray * _Nullable)data;
- (void)room:(EnxRoom * _Nullable)room didSetTalkerCount:(NSArray * _Nullable)Data;
- (void)stream:(EnxStream * _Nullable)stream didHardVideoMute:(NSArray * _Nullable)data;
- (void)stream:(EnxStream * _Nullable)stream didHardVideoUnMute:(NSArray * _Nullable)data;
- (void)stream:(EnxStream * _Nullable)stream didRemoteStreamVideoMute:(NSArray * _Nullable)data;
- (void)stream:(EnxStream * _Nullable)stream didRemoteStreamVideoUnMute:(NSArray * _Nullable)data;
- (void)stream:(EnxStream * _Nullable)stream didRemoteStreamAudioMute:(NSArray * _Nullable)data;
- (void)stream:(EnxStream * _Nullable)stream didRemoteStreamAudioUnMute:(NSArray * _Nullable)data;
- (void)didhardMute:(NSArray * _Nullable)Data;
- (void)didhardUnMute:(NSArray * _Nullable)Data;
- (void)didHardMuteRecived:(NSArray * _Nullable)Data;
- (void)didHardunMuteRecived:(NSArray * _Nullable)Data;
- (void)didRoomDisconnect:(NSArray * _Nullable)response;
- (void)room:(EnxRoom * _Nullable)room didStartScreenShareACK:(NSArray * _Nullable)Data;
- (void)room:(EnxRoom * _Nullable)room didStoppedScreenShareACK:(NSArray * _Nullable)Data;
- (void)room:(EnxRoom * _Nullable)room didScreenShareStarted:(EnxStream * _Nullable)stream;
- (void)room:(EnxRoom * _Nullable)room didScreenShareStopped:(EnxStream * _Nullable)stream;
- (void)room:(EnxRoom * _Nullable)room didStartCanvasACK:(NSArray * _Nullable)Data;
- (void)room:(EnxRoom * _Nullable)room didStoppedCanvasACK:(NSArray * _Nullable)Data;
- (void)room:(EnxRoom * _Nullable)room didCanvasStarted:(EnxStream * _Nullable)stream;
- (void)room:(EnxRoom * _Nullable)room didCanvasStopped:(EnxStream * _Nullable)stream;
- (void)room:(EnxRoom * _Nullable)room didStartAnnotationACK:(NSArray * _Nullable)Data;
- (void)room:(EnxRoom * _Nullable)room didStoppedAnnotationACK:(NSArray * _Nullable)Data;
- (void)room:(EnxRoom * _Nullable)room didAnnotationStarted:(EnxStream * _Nullable)stream;
- (void)room:(EnxRoom * _Nullable)room didAnnotationStopped:(EnxStream * _Nullable)stream;
- (void)room:(EnxRoom * _Nonnull)room didInitFileUpload:(NSArray * _Nullable)data;
- (void)room:(EnxRoom * _Nonnull)room didFileUploaded:(NSArray * _Nullable)data;
- (void)room:(EnxRoom * _Nonnull)room didFileUploadFailed:(NSArray * _Nullable)data;
- (void)room:(EnxRoom * _Nonnull)room didFileUploadStarted:(NSArray * _Nullable)data;
- (void)room:(EnxRoom * _Nonnull)room didFileUploadCancelled:(NSArray * _Nullable)data;
- (void)room:(EnxRoom * _Nonnull)room didFileAvailable:(NSArray * _Nullable)data;
- (void)room:(EnxRoom * _Nonnull)room didInitFileDownload:(NSArray * _Nullable)data;
- (void)room:(EnxRoom * _Nonnull)room didFileDownloaded:(NSString * _Nullable)data;
- (void)room:(EnxRoom * _Nonnull)room didFileDownloadFailed:(NSArray * _Nullable)data;
- (void)room:(EnxRoom * _Nonnull)room didFileDownloadCancelled:(NSArray * _Nullable)data;
- (void)room:(EnxRoom * _Nullable)room didConferencessExtended:(NSArray * _Nullable)data;
- (void)room:(EnxRoom * _Nullable)room didConferenceRemainingDuration:(NSArray * _Nullable)data;
- (void)room:(EnxRoom * _Nullable)room diduserAwaited:(NSArray * _Nullable)data;
- (void)room:(EnxRoom * _Nullable)room didRoomAwated:(NSArray * _Nullable)reason;
- (void)room:(EnxRoom * _Nullable)room didSwitchUserRole:(NSArray * _Nullable)data;
- (void)room:(EnxRoom * _Nullable)room didUserRoleChanged:(NSArray * _Nullable)data;
- (void)room:(EnxRoom * _Nullable)room didRoomModeSwitched:(NSArray * _Nullable)data;
- (void)room:(EnxRoom * _Nullable)room didSharePermissionDeny:(NSArray * _Nullable)data;
- (void)room:(EnxRoom * _Nullable)room didSharePermissionsModeChanged:(NSArray * _Nullable)data;
- (void)room:(EnxRoom * _Nullable)room didSharePermissionRequested:(NSArray * _Nullable)data;
- (void)room:(EnxRoom * _Nullable)room didSharePermissionReleased:(NSArray * _Nullable)data;
- (void)room:(EnxRoom * _Nullable)room didSharePermissionCancled:(NSArray * _Nullable)data;
- (void)room:(EnxRoom * _Nullable)room didSharePermissionGranted:(NSArray * _Nullable)data;
- (void)room:(EnxRoom * _Nullable)room didAckStartStreaming:(NSArray * _Nullable)data;
- (void)room:(EnxRoom * _Nullable)room didAckStopStreaming:(NSArray * _Nullable)data;
- (void)room:(EnxRoom * _Nullable)room didStreamingStarted:(NSArray * _Nullable)data;
- (void)room:(EnxRoom * _Nullable)room didStreamingStopped:(NSArray * _Nullable)data;
- (void)room:(EnxRoom * _Nullable)room didStreamingFailed:(NSArray * _Nullable)data;
- (void)room:(EnxRoom * _Nullable)room didStreamingUpdated:(NSArray * _Nullable)data;
- (void)room:(EnxRoom * _Nullable)room didHlsStarted:(NSArray * _Nullable)data;
- (void)room:(EnxRoom * _Nullable)room didHlsStopped:(NSArray * _Nullable)data;
- (void)room:(EnxRoom * _Nullable)room didHlsFailed:(NSArray * _Nullable)data;
- (void)room:(EnxRoom * _Nullable)room didHlsWaiting:(NSArray * _Nullable)data;
@end


typedef SWIFT_ENUM(NSInteger, ParticipantListOptions, open) {
  ParticipantListOptionsAudio = 0,
  ParticipantListOptionsVideo = 1,
  ParticipantListOptionsChat = 2,
  ParticipantListOptionsDisconnect = 3,
  ParticipantListOptionsChangeRole = 4,
};

typedef SWIFT_ENUM(NSInteger, RoomSettingOptions, open) {
  RoomSettingOptionsAutoCopy = 0,
  RoomSettingOptionsAskToConf = 1,
  RoomSettingOptionsConnectionTime = 2,
  RoomSettingOptionsChatAudio = 3,
  RoomSettingOptionsParticipantJoin = 4,
  RoomSettingOptionsParticipantLeft = 5,
  RoomSettingOptionsStartRec = 6,
  RoomSettingOptionsStopRec = 7,
  RoomSettingOptionsSessionExp = 8,
};








#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
